@model WebApp.Areas.Client.Models.ClientViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using (Html.BeginForm("CustomerUpdate", "Cstmr", FormMethod.Post, new { id = "CustomerUpdateForm", enctype = "multipart/form-data" }))
{
	@Html.HiddenFor(model => model.Customer.ID)

	<div class="row">
		<div class="col-lg-12 mt-2">
			<div id="PhotoPreview">
				<img style="width:5rem;height:6rem;object-fit:contain" src="@( Model.Customer != null && !string.IsNullOrEmpty(Model.Customer.PhotoUrl)? Url.Content(Model.Customer.PhotoUrl): Url.Content("/Client/img/default/avator.png"))" alt="User Image" />
			</div>
			@Html.HiddenFor(model => model.Customer.PhotoUrl)
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">First name</label>
			@Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @type = "text", @id = "Name", @placeholder = "Enter Name..", @class = "form-control", @required = "require" } })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Email</label>
			@Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @type = "mail", @id = "Email", @placeholder = "Enter Email..", @class = "form-control", @required = "require" } })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Phone</label>
			@Html.EditorFor(model => model.Customer.Phone, new { htmlAttributes = new { id = "Phone", @class = "form-control", placeholder = "Enter Phone Number", required = "required" } })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Country</label>
			@Html.DropDownListFor(model => model.Customer.CountryId, (IEnumerable<SelectListItem>)ViewBag.CountryList, "Select Country", new { @class = "form-control", @id = "CountryId", required = "required" })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">District</label>
			@Html.DropDownListFor(model => model.Customer.DistrictId, (IEnumerable<SelectListItem>)ViewBag.DistrictList, "Select District", new { @class = "form-control", @id = "DistrictId", required = "required" })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Police Station</label>
			@Html.DropDownListFor(model => model.Customer.PoliceStationId, (IEnumerable<SelectListItem>)ViewBag.PoliceStationList, "Select Police Station", new { @class = "form-control", @id = "PoliceStationId", required = "required" })
		</div>
		<div class="col-lg-12 mt-2">
			<label class="">Address</label>
			@Html.TextAreaFor(model => model.Customer.Address, new { @id = "Address", @class = "form-control", placeholder = "Enter Address", required = "required", rows = "2" })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Password</label>
			@Html.EditorFor(model => model.Customer.Password, new { htmlAttributes = new { @type = "password", @id = "Password", @placeholder = "Enter Password..", @class = "form-control", @required = "require", @minLength = "6", @maxLength = "15" } })
		</div>
		<div class="col-lg-6 mt-2">
			<label class="">Confirm Password</label>
			@Html.EditorFor(model => model.Customer.ConfirmPassword, new { htmlAttributes = new { @type = "password", @id = "ConfirmPassword", @placeholder = "Enter Confirm Password..", @class = "form-control", @required = "require" } })
			@Html.ValidationMessageFor(model => model.Customer.ConfirmPassword, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-6 mt-2">
			@Html.EditorFor(model => model.Customer.Photo, new { htmlAttributes = new { id = "Photo", @class = "form-control form-file", placeholder = "Enter Role", Type = "file", onchange = "PhotoPreview()" } })
		</div>
		<div class="col-lg-12 mt-4 mb-3">
			<button type="button" class="btn btn-custom w-100" onclick="CustomerUpdate()">Update</button>
		</div>
		
	</div>

}
<script type="text/javascript">
	document.getElementById("Name").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("Email").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("Phone").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("CountryId").onchange = function () { this.style.border = "0.5px solid #dee2e6";GetDistrictByCountryId(); };
	document.getElementById("DistrictId").onchange = function () { this.style.border = "0.5px solid #dee2e6";GetPoliceStationByDistrictId(); };
	document.getElementById("PoliceStationId").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("Password").onchange = function () { this.style.border = "0.5px solid #dee2e6";PasswordCheck(); };
	document.getElementById("ConfirmPassword").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };

	function PasswordCheck() {
		var value = document.getElementById("Password").value;
		if (value.length < 6 || value.length > 15) {
			Swal.fire({
				position: "center",
				icon: "error",
				title: "Password must be between 6 and 15 characters.",
				showConfirmButton: false,
				timer: 2000
			});
		}
	}

	function GetDistrictByCountryId(){
		var CountryId = document.getElementById("CountryId").value;
		$.ajax({
			url: '@Url.Action("GetDistrictByCountryId", "Customer")',
			type: 'GET',
			data: { ID: CountryId },
			success: function (district) {

				var districtDropdown = $('#DistrictId');
				districtDropdown.empty();
				districtDropdown.append($('<option>').text('Select District').attr('value', ''));
				$.each(district, function (index, item) {
					districtDropdown.append($('<option>', {value: item.value,text: item.text}));
					// subCatDropdown.append($('<option>').text(item.Text).attr('value', item.Value));
				});
			},
			error: function (error) {
				if (error.status === 401) location.href = '/SPanel1325/Login';
				console.log('Error fetching District');
			}
		});
	}
	function GetPoliceStationByDistrictId(){
		var DistrictId = document.getElementById("DistrictId").value;
		$.ajax({
			url: '@Url.Action("GetPoliceStationByDistrictId", "Customer")',
			type: 'GET',
			data: { ID: DistrictId },
			success: function (policeStation) {

				var policeStationDropdown = $('#PoliceStationId');
				policeStationDropdown.empty();
				policeStationDropdown.append($('<option>').text('Select Police Station').attr('value', ''));
				$.each(policeStation, function (index, item) {
					policeStationDropdown.append($('<option>', {value: item.value,text: item.text}));
					// subCatDropdown.append($('<option>').text(item.Text).attr('value', item.Value));
				});
			},
			error: function (error) {
				if (error.status === 401) location.href = '/SPanel1325/Login';
				console.log('Error fetching Police Station');
			}
		});
	}
</script>