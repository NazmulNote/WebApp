@model WebApp.Areas.Admin.Models.AdminViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using (Html.BeginForm("ProductStockSetUpdate", "Stock", FormMethod.Post, new { id = "ProductStockSetUpdateForm", enctype = "multipart/form-data" }))
{
	@Html.HiddenFor(model => model.ProductStock.ID)

	<div class="row">
		<div class="col-lg-12 col-md-12 col-sm-12 col-12">
			<div class="row">
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.FromDate, "From:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.TextBoxFor(model => model.ProductStock.FromDate, "{0:yyyy-MM-dd}", new { @class = "form-control", placeholder = "Enter From Date", required = "required", type = "date", id = "FromDate" })
							@Html.ValidationMessageFor(model => model.ProductStock.FromDate, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.ToDate, "To:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.TextBoxFor(model => model.ProductStock.ToDate, "{0:yyyy-MM-dd}", new { @class = "form-control", placeholder = "Enter From Date", required = "required", type = "date", id = "ToDate" })
							@Html.ValidationMessageFor(model => model.ProductStock.ToDate, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.CatId, "Category:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductStock.CatId, (IEnumerable<SelectListItem>)ViewBag.CategoryList, "Select Category", new { @class = "form-control", @id = "CatId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductStock.CatId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.SubCatId, "Sub Cat:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductStock.SubCatId, (IEnumerable<SelectListItem>)ViewBag.SubCatList, "Select Sub Category", new { @class = "form-control", @id = "SubCatId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductStock.SubCatId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.SubChildCatId, "Brand:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductStock.SubChildCatId, (IEnumerable<SelectListItem>)ViewBag.subChildCatList, "Select Brand", new { @class = "form-control", @id = "SubChildCatId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductStock.SubChildCatId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductStock.ProductId, "Product:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductStock.ProductId, (IEnumerable<SelectListItem>)ViewBag.ProductList, "Select Product", new { @class = "form-control", @id = "ProductId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductStock.ProductId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="col-lg-6 col-md-6 col-sm-6 col-12 mb-1 form-check" style="text-align:right">
					<button type="button" class="btn btn-sm btn-outline-primary btn-user" onclick="ExportExcel()">
						Export
					</button>
				</div>
			</div>
		</div>
	</div>

}
<script type="text/javascript">
	document.getElementById("FromDate").onchange = ()=>{
		GetDetPView();
	}
	document.getElementById("ToDate").onchange = ()=>{
		GetDetPView();
	}
	document.getElementById("CatId").onchange = ()=> {
		var CategoryId = document.getElementById("CatId").value;
		$.ajax({
			url: '@Url.Action("GetSubCatByCatId", "Stock")',
			type: 'GET',
			data: { ID: CategoryId },
			success: function (subCat) {

				var subCatDropdown = $('#SubCatId');
				subCatDropdown.empty();
				subCatDropdown.append($('<option>').text('Select Sub Category').attr('value', ''));
				$.each(subCat, function (index, item) {
					subCatDropdown.append($('<option>', {value: item.value,text: item.text}));
				});
				GetDetPView();
			},
			error: function (error) {
				if (error.status === 401) location.href = '/SPanel1325/Login';
				console.log('Error fetching sub Cat');
			}
		});
	}
	document.getElementById("SubCatId").onchange = ()=>{
		var SubCatId = document.getElementById("SubCatId").value;
		$.ajax({
			url: '@Url.Action("GetSubChildCatBySubCatId", "Stock")',
			type: 'GET',
			data: { ID: SubCatId },
			success: function (subChildCat) {

				var subChildCatDropdown = $('#SubChildCatId');
				subChildCatDropdown.empty();
				subChildCatDropdown.append($('<option>').text('Select Brand').attr('value', ''));
				$.each(subChildCat, function (index, item) {
					subChildCatDropdown.append($('<option>', {value: item.value,text: item.text}));
				});
				GetDetPView();
			},
			error: function (error) {
				if (error.status === 401) location.href = '/SPanel1325/Login';
				console.log('Error fetching sub child Cat');
			}
		});
	}
	document.getElementById("SubChildCatId").onchange = ()=>{
		var SubCatId = document.getElementById("SubChildCatId").value;
		$.ajax({
			url: '@Url.Action("GetProductBySubChildCatId", "Stock")',
			type: 'GET',
			data: { ID: SubCatId },
			success: function (product) {

				var productDropdown = $('#ProductId');
				productDropdown.empty();
				productDropdown.append($('<option>').text('Select Product').attr('value', ''));
				$.each(product, function (index, item) {
					productDropdown.append($('<option>', {value: item.value,text: item.text}));
				});
				GetDetPView();
			},
			error: function (error) {
				if (error.status === 401) location.href = '/SPanel1325/Login';
				console.log('Error fetching sub child Cat');
			}
		});
	}
	document.getElementById("ProductId").onchange = ()=>{
		GetDetPView();
	}
</script>
