@model WebApp.Areas.Admin.Models.AdminViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using (Html.BeginForm("ProductPurchaseSetUpdate", "ProductPurchase", FormMethod.Post, new { id = "ProductPurchaseSetUpdateForm", enctype = "multipart/form-data" }))
{
	@Html.HiddenFor(model => model.ProductPurchase.ID)

		<div class="row">
			<div class="col-lg-12 col-md-12 col-sm-12 col-12">
				<div class="row">

				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.ProductId, "Product:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductPurchase.ProductId, (IEnumerable<SelectListItem>)ViewBag.ProductList, "Select Product", new { @class = "form-control", @id = "ProductId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductPurchase.ProductId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>

				<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
					<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.VendorId, "Vendor:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
						<div class="col-sm-9 col-8">
							@Html.DropDownListFor(model => model.ProductPurchase.VendorId, (IEnumerable<SelectListItem>)ViewBag.VendorList, "Select Vendor", new { @class = "form-control", @id = "VendorId", required = "required" })
							@Html.ValidationMessageFor(model => model.ProductPurchase.VendorId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.Qty, "Qty:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
							<div class="col-sm-9 col-8">
							@Html.EditorFor(model => model.ProductPurchase.Qty, new { htmlAttributes = new { id = "Qty", @class = "form-control", placeholder = "Enter Qty", required = "required" } })
							@Html.ValidationMessageFor(model => model.ProductPurchase.Qty, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.PurchasePrice, "P.Price:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
							<div class="col-sm-9 col-8">
							@Html.EditorFor(model => model.ProductPurchase.PurchasePrice, new { htmlAttributes = new { Type="number",@step="0.001",id = "PurchasePrice", @class = "form-control", placeholder = "Enter P.Price" } })
							@Html.ValidationMessageFor(model => model.ProductPurchase.PurchasePrice, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.PurchaseDate, "P.Date:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
							<div class="col-sm-9 col-8">
							@Html.EditorFor(model => model.ProductPurchase.PurchaseDate, new { htmlAttributes = new { id = "PurchaseDate", @class = "form-control", placeholder = "Enter P.Date", required = "required" } })
							@Html.ValidationMessageFor(model => model.ProductPurchase.PurchaseDate, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.InvoiceNo, "Invoice:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
							<div class="col-sm-9 col-8">
							@Html.EditorFor(model => model.ProductPurchase.InvoiceNo, new { htmlAttributes = new { Type = "text", id = "InvoiceNo", @class = "form-control", placeholder = "Enter Invoice No", required = "required" } })
							@Html.ValidationMessageFor(model => model.ProductPurchase.InvoiceNo, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row">
						@Html.LabelFor(model => model.ProductPurchase.Remarks, "Remarks:", htmlAttributes: new { @class = "col-sm-3 col-4 col-form-label" })
							<div class="col-sm-9 col-8">
							@Html.TextAreaFor(model => model.ProductPurchase.Remarks, new { @id = "Remarks", @class = "form-control", placeholder = "Enter Remarks", required = "required", rows = "2" })
							@Html.ValidationMessageFor(model => model.ProductPurchase.Remarks, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="col-lg-3 col-md-3 col-sm-6 col-12 mb-1">
						<div class="form-group row ml-2">
							<label class="form-check-label">
							@Html.CheckBoxFor(model => model.ProductPurchase.IsActive, new { @class = "form-check-input" }) Is Active
							</label>
						</div>
					</div>
					<div class="col-lg-12 col-md-12 col-sm-6 col-12 mb-1 form-check" style="text-align:right">
						<button type="button" class="btn btn-sm btn-primary btn-user" onclick="ProductPurchaseSetUpdate()">
							Save
						</button>
						<a class="btn btn-sm btn-outline-primary" asp-controller="ProductPurchase" asp-action="ProductPurchaseCreate">Refresh</a>
					</div>
				</div>
			</div>


		</div>

}
<script type="text/javascript">
	document.getElementById("ProductId").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("VendorId").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("Qty").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("PurchasePrice").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
	document.getElementById("PurchaseDate").onchange = function () { this.style.border = "0.5px solid #dee2e6";};
	document.getElementById("InvoiceNo").onchange = function () { this.style.border = "0.5px solid #dee2e6";};
	document.getElementById("Remarks").onchange = function () { this.style.border = "0.5px solid #dee2e6"; };
</script>
